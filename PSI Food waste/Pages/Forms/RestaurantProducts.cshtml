@page
@using PSI_Food_waste.Pages.Forms
@model PSI_Food_waste.Pages.Forms.RestaurantProductsModel
@{
}
<h1>@Model.restaurant.Title</h1></>

<h2>Available products</h2>
<form method="post">
    <label asp-for="searchCriteria">product name: </label>
    <input type="text" asp-for="searchCriteria" />
    <button class="btn btn-primary" type="submit">Search</button>
</form>
<table class="table mt-5">
    <thead>
        <tr>
            <th scope="col">Name</th>
            <th scope="col">Price</th>
            <th scope="col">Discount size</th>
            <th scope="col">Size</th>
            <th scope="col">Gluten Free</th>
            <th scope="col"></th>
        </tr>
    </thead>
    @*@foreach (var product in Model.products)
        {
            <tr>
                <td>@product.Name</td>
                <td>@($"{product.Price:C}")</td>
                <td>@product.Size</td>
                <td>@Model.GlutenFreeText(product)</td>
            </tr>
        }*@
    @{
        if (!string.IsNullOrWhiteSpace(value : Model.searchCriteria))
        {
            var query = from Models.Product product in Model.products
                        where product.Name.ToLower().Contains(value : Model.searchCriteria)
                        select product;
            int queryCount = query.Count();
            //query.any
            //var enumerator = object.iterator();
            //while (enumerator.kazkoksmetodas.next())
            //    {
            //        enumerator.get
            //    }
            if (queryCount != 0)
            {
                foreach (var rez in query)
                {
                    <tr>
                        <td>@rez.Name</td>
                        <td><strike style="color:red">@($"{rez.Price:C}")</strike>     @($"{rez.DiscountedPrice:C}") </td>
                        <td>@($"{(rez.Discount/100d):P0}")</td>
                        <td>@Model.GlutenFreeText(rez)</td>
                    </tr>
                }

                <p>results found: @queryCount</p>
            }

            else
            {
                <tr>
                    <td>no results</td>
                    <td>-</td>
                    <td>-</td>
                    <td>-</td>
                </tr>
            }
        }

        else
        {
            foreach (var product in Model.products)
            {
                <tr>
                    <td>@product.Name</td>
                    <td><strike style="color:red">@($"{product.Price:C}")</strike>     @($"{product.DiscountedPrice:C}") </td>
                    <td>@($"{(product.Discount/100d):P0}")</td>
                    <td>@product.Size</td>
                    <td>@Model.GlutenFreeText(product)</td>
                </tr>
            }
        }
    }
</table>
@*@{
    if (!string.IsNullOrWhiteSpace(Model.searchCriteria))
    {
        var query = from Models.Product product in Model.products
                    where product.Name.Contains(Model.searchCriteria)
                    select product;
        foreach (var rez in query)
        {
            <p>@rez.Name</p>
        }
    }
}*@
<p>@Model.searchCriteria</p>
@*@foreach (var product in Model.products)
    {
        if (product.Name.Equals(@Model.searchCriteria))
        {
            <p>it's a match</p>
        }
    }*@
